filetype off                    " required
filetype plugin indent on       " required
syntax on

set nocompatible                " required
set noexpandtab
set tabstop=4
set number                      " Show line number
set showmatch                   " Highlight matches {[()]}
set history=1000
set undolevels=1000
set wildignore=*.swp,*.bak,*.pyc
set ignorecase
"set spell
set encoding=utf-8
set termguicolors
set nowrap

" ======== set the runtime path to include Vundle and initialize ====== 

set rtp+=~/.vim/bundle/Vundle.vim

" alternatively, pass a path where Vundle should install plugins
" call vundle"begin('~/some/path/here')
" 
" ======= let Vundle manage Vundle, required ==========================

" ======= add all your plugins here ===================================

" (note older versions of Vundle used Bundle instead of Plugin)

call vundle#begin()            " required

Plugin 'gmarik/Vundle.vim'
Plugin 'vim-scripts/indentpython.vim'
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
Plugin 'vim-syntastic/syntastic'
Plugin 'nvie/vim-flake8'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'sheerun/vim-polyglot'
Bundle 'Valloric/YouCompleteMe'

call vundle#end()            " required

" ===================== https://github.com/junegunn/vim-plug =====
call plug#begin()
" Post-update hook can be a lambda expression
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }

call plug#end()


" ===================== Customize mapping =========================

" Mappleader is space
let mapleader = "\<space>" 

" ycm-core/YouCompleteMe
let g:Ycm_python_binary_path='python3'
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>

" Nerdtree mappings. nt = toggle, nf = find.
nnoremap <Leader>nt :NERDTreeToggle<CR>
nnoremap <Leader>nf :NERDTreeFind<CR>
" Commenting Lines 
nnoremap <Leader># :normal I#<Esc>


" ======= Python Settings ==================================================
"
" Python PEP8
au BufNewFile,BufRead *.py
    \set textwidth=79
    \set expandtab
    \set autoindent
    \set fileformat=unix

au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/ 
 highlight BadWhitespace ctermbg=red guibg=darkred

let python_highlight_all=1

let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

" ======================= atom one dark scheme ==============================

let g:onedark_hide_endofbuffer=1
let g:onedark_termcolors=256
let g:onedark_terminal_italics=1
colorscheme onedark

" JS, HTML, CSS, YAML, JSON
au BufNewFile,BufRead *.js, *.html, *.css, *.yml, *.yaml, *.json
    \ set noexpandtab
    \ set tabstop=2
    \ set softtabstop=2
    \ set shiftwidth=2

" Enable Folding
set foldmethod=indent
set foldlevel=99
" Enable Folding with the spacebar
nnoremap <space> za

" +========= Shell Script Template ===========================================
"
au bufnewfile *.sh 0r $HOME/.vim/SHELL_HEADER.temp
"au bufnewfile *.yml 0r $HOME/.vim/YAML.temp
"au bufnewfile *.yaml 0r $HOME/.vim/YAML.temp

" +========= YAML Configs ====================================================
"
if version < 600
  syntax clear
elseif exists("b:current_syntax")
  finish
endif

syntax clear

syn match yamlDelimiter	"[:,-]"
syn match yamlBlock "[\[\]\{\}\|\>]"
syn match yamlOperator "[?^+-]\|=>"

syn region yamlComment	start="\#" end="$"
syn match yamlIndicator	"#YAML:\S\+"

syn region yamlString	start="'" end="'" skip="\\'"
syn region yamlString	start='"' end='"' skip='\\"' contains=yamlEscape
syn match  yamlEscape	+\\[abfnrtv'"\\]+ contained
syn match  yamlEscape	"\\\o\o\=\o\=" contained
syn match  yamlEscape	"\\x\x\+" contained

syn match  yamlType	"!\S\+"

syn keyword yamlConstant NULL Null null NONE None none NIL Nil nil
syn keyword yamlConstant TRUE True true YES Yes yes ON On on
syn keyword yamlConstant FALSE False false NO No no OFF Off off

syn match  yamlKey	"\w\+\ze\s*:"
syn match  yamlAnchor	"&\S\+"
syn match  yamlAlias	"*\S\+"

" Setupt the hilighting links

hi link yamlConstant Keyword
hi link yamlIndicator PreCondit
hi link yamlAnchor	Function
hi link yamlAlias	Function
hi link yamlKey		Identifier
hi link yamlType	Type

hi link yamlComment	Comment
hi link yamlBlock	Operator
hi link yamlOperator	Operator
hi link yamlDelimiter	Delimiter
hi link yamlString	String
hi link yamlEscape	Special
